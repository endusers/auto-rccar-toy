<!-- ①パスの定期的な再計算はしない                                                       -->
<!--   ゴール判定で「Reached the goal!」&「Navigation succeeded」とするため               -->
<!--   GoalReachedがSUCCEEDEDのときにComputePathToPoseをコールする                        -->
<!-- ②ゴールの更新はhumbleのプラグインを使用                                             -->
<!--   foxyのGoalUpdatedでは実現ができなさそうなためhumbleのGlobalUpdatedGoalを使って対応 -->
<!-- ③障害物など検出時は事象がクリアされるまで待機(最大5分)                              -->
<!--   待機中はコストマップと再計算を定期的に実施(3s周期)                                 -->

<root main_tree_to_execute="MainTree">
  <BehaviorTree ID="MainTree">
    <PipelineSequence name="NavigateWithReplanning">
      <RateController hz="5.0">
        <Fallback>
          <Sequence>
            <GoalReached goal="{goal}" />
            <ComputePathToPose goal="{goal}" path="{path}" planner_id="GridBased"/>
          </Sequence>
          <Sequence>
            <GlobalUpdatedGoal />
            <RecoveryNode number_of_retries="2" name="ComputePathToPose">
              <ComputePathToPose goal="{goal}" path="{path}" planner_id="GridBased"/>
              <ClearEntireCostmap name="ClearGlobalCostmap-Context" service_name="global_costmap/clear_entirely_global_costmap"/>
            </RecoveryNode>
          </Sequence>
          <Inverter>
            <IsStuck />
          </Inverter>
        </Fallback>
      </RateController>
      <RecoveryNode number_of_retries="100" name="NavigateWithReplanning">
        <Fallback>
          <FollowPath path="{path}" controller_id="FollowPath"/>
          <ForceFailure>
            <ClearEntireCostmap name="ClearLocalCostmap-Context" service_name="local_costmap/clear_entirely_local_costmap"/>
          </ForceFailure>
          <ForceFailure>
            <ComputePathToPose goal="{goal}" path="{path}" planner_id="GridBased"/>
          </ForceFailure>
          <ForceFailure>
            <ClearEntireCostmap name="ClearGlobalCostmap-Context" service_name="global_costmap/clear_entirely_global_costmap"/>
          </ForceFailure>
        </Fallback>
        <Wait wait_duration="3" />
      </RecoveryNode>
    </PipelineSequence>
  </BehaviorTree>
</root>
